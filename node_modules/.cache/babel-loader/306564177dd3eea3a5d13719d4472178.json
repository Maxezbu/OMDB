{"ast":null,"code":"var _jsxFileName = \"/home/buru/bootcamp/25-OMDB/src/components/Movie.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { setMovies } from \"../store/movies\";\nimport { setUser } from \"../store/user\";\nimport { setFavs } from \"../store/favs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Movie = props => {\n  _s();\n\n  const param = props.match.params.title;\n  const user = useSelector(state => state.user);\n  const movie = useSelector(state => state.movies);\n  /* const favs = useSelector((state) => state.favorites);\n   */\n\n  const history = useHistory();\n  const [favs, setFavs] = useState([]);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    axios.get(`https://www.omdbapi.com/?apikey=20dac387&t=${param}\"`).then(response => response.data).then(data => data).then(data => dispatch(setMovies(data)));\n  }, [param, dispatch]);\n  useEffect(() => {\n    axios.get(\"/api/movies\").then(res => res.data).then(user => {\n      dispatch(setUser(user));\n      setLoading(false);\n    }).catch(() => {\n      setLoading(false);\n    });\n  }, [dispatch]);\n\n  const handelFavs = () => {\n    setFavs([...favs, movie]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"LOS FAVORITOOOOOS \", favs && console.log(favs)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handelFavs,\n        children: \"Agregar a Favoritos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => history.push(\"/movies\"),\n        children: \"TO BACK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: movie.Title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: movie.Poster,\n      alt: movie.Title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), movie.Plot, /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Year and Genre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), movie.Year, movie.Genre, /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Language\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), movie.Language, /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Runtime\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), movie.Runtime, /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Actors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), movie.Actors, /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ratings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), movie.Ratings && movie.Ratings.map(rating => {\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: rating.Source\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), rating.Value]\n      }, movie.imdbID + movie.Ratings.indexOf(rating), true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(Movie, \"1V1iLKjWYc6AxvyBtraA3y4ERf0=\", false, function () {\n  return [useSelector, useSelector, useHistory, useDispatch];\n});\n\n_c = Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["/home/buru/bootcamp/25-OMDB/src/components/Movie.jsx"],"names":["React","useEffect","useState","useHistory","useSelector","useDispatch","axios","setMovies","setUser","setFavs","Movie","props","param","match","params","title","user","state","movie","movies","history","favs","dispatch","get","then","response","data","res","setLoading","catch","handelFavs","console","log","push","Title","Poster","Plot","Year","Genre","Language","Runtime","Actors","Ratings","map","rating","Source","Value","imdbID","indexOf"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\n\nimport { setMovies } from \"../store/movies\";\n\nimport { setUser } from \"../store/user\";\n\nimport { setFavs } from \"../store/favs\";\n\nexport const Movie = (props) => {\n  const param = props.match.params.title;\n\n  const user = useSelector((state) => state.user);\n  const movie = useSelector((state) => state.movies);\n  /* const favs = useSelector((state) => state.favorites);\n   */\n\n  const history = useHistory();\n\n  const [favs, setFavs] = useState([]);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    axios\n      .get(`https://www.omdbapi.com/?apikey=20dac387&t=${param}\"`)\n\n      .then((response) => response.data)\n      .then((data) => data)\n      .then((data) => dispatch(setMovies(data)));\n  }, [param, dispatch]);\n\n  useEffect(() => {\n    axios\n      .get(\"/api/movies\")\n      .then((res) => res.data)\n      .then((user) => {\n        dispatch(setUser(user));\n        setLoading(false);\n      })\n      .catch(() => {\n        setLoading(false);\n      });\n  }, [dispatch]);\n\n  const handelFavs = () => {\n    setFavs([...favs, movie]);\n  };\n\n  return (\n    <>\n      <h3>LOS FAVORITOOOOOS {favs && console.log(favs)}</h3>\n      <nav>\n        <button onClick={handelFavs}>Agregar a Favoritos</button>\n\n        <br />\n        <br />\n\n        <button onClick={() => history.push(\"/movies\")}>TO BACK</button>\n      </nav>\n      <h2>{movie.Title}</h2>\n      <br />\n      <img src={movie.Poster} alt={movie.Title} />\n      <br />\n      <h2>Description</h2>\n      {movie.Plot}\n      <h2>Year and Genre</h2>\n      {movie.Year}\n      {movie.Genre}\n      <h2>Language</h2>\n      {movie.Language}\n      <h2>Runtime</h2>\n      {movie.Runtime}\n      <h2>Actors</h2>\n      {movie.Actors}\n      <h2>Ratings</h2>\n      {movie.Ratings &&\n        movie.Ratings.map((rating) => {\n          return (\n            <section key={movie.imdbID + movie.Ratings.indexOf(rating)}>\n              <h3>{rating.Source}</h3>\n              {rating.Value}\n            </section>\n          );\n        })}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}