{"ast":null,"code":"var _jsxFileName = \"/home/buru/bootcamp/25-OMDB/src/components/Movie.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { getOneByTitle } from \"../hooks/hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Movie = () => {\n  _s();\n\n  const [movie, setMovie] = useState({});\n  useEffect(() => {\n    getOneByTitle(\"batman\").then(data => setMovie(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"HOLAAA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: movie.Title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: movie.Poster,\n      alt: movie.Title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), movie.Year, movie.Genre, movie.Lenguage, movie.Runtime, movie.Actors, movie.Ratings && movie.Ratings.map(ratings => {\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: ratings.Source\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this), ratings.Value]\n      }, movie.imdbID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(Movie, \"vjn7l2Xfyv8U759KvgOto7g+Dfw=\");\n\n_c = Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["/home/buru/bootcamp/25-OMDB/src/components/Movie.jsx"],"names":["React","useState","useEffect","getOneByTitle","Movie","movie","setMovie","then","data","Title","Poster","Year","Genre","Lenguage","Runtime","Actors","Ratings","map","ratings","Source","Value","imdbID"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,gBAA9B;;;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,aAAa,CAAC,QAAD,CAAb,CAAwBI,IAAxB,CAA8BC,IAAD,IAAUF,QAAQ,CAACE,IAAD,CAA/C;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAKH,KAAK,CAACI;AAAX;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAK,MAAA,GAAG,EAAEJ,KAAK,CAACK,MAAhB;AAAwB,MAAA,GAAG,EAAEL,KAAK,CAACI;AAAnC;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,EAOGJ,KAAK,CAACM,IAPT,EAQGN,KAAK,CAACO,KART,EASGP,KAAK,CAACQ,QATT,EAUGR,KAAK,CAACS,OAVT,EAWGT,KAAK,CAACU,MAXT,EAYGV,KAAK,CAACW,OAAN,IACCX,KAAK,CAACW,OAAN,CAAcC,GAAd,CAAmBC,OAAD,IAAa;AAC7B,0BACE;AAAA,gCACE;AAAA,oBAAKA,OAAO,CAACC;AAAb;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGD,OAAO,CAACE,KAFX;AAAA,SAAcf,KAAK,CAACgB,MAApB;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAPD,CAbJ;AAAA,kBADF;AAwBD,CA/BM;;GAAMjB,K;;KAAAA,K","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getOneByTitle } from \"../hooks/hooks\";\n\nexport const Movie = () => {\n  const [movie, setMovie] = useState({});\n\n  useEffect(() => {\n    getOneByTitle(\"batman\").then((data) => setMovie(data));\n  }, []);\n\n  return (\n    <>\n      <h1>HOLAAA</h1>\n      <h1>{movie.Title}</h1>\n      <br />\n      <img src={movie.Poster} alt={movie.Title} />\n      <br />\n      <h2>Description</h2>\n      {movie.Year}\n      {movie.Genre}\n      {movie.Lenguage}\n      {movie.Runtime}\n      {movie.Actors}\n      {movie.Ratings &&\n        movie.Ratings.map((ratings) => {\n          return (\n            <section key={movie.imdbID}>\n              <h3>{ratings.Source}</h3>\n              {ratings.Value}\n            </section>\n          );\n        })}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}