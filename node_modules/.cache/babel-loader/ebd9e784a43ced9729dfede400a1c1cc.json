{"ast":null,"code":"var _jsxFileName = \"/home/buru/bootcamp/25-OMDB/src/components/Movie.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { setMovies } from \"../store/movies\";\nimport { Favorites } from \"./Favorites\";\nimport { setFavs } from \"../store/favs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Movie = props => {\n  _s();\n\n  const param = props.match.params.title;\n  const movie = useSelector(state => state.movies);\n  /* const favs = useSelector((state) => state.favorites);\n   */\n\n  console.log(movie.imdbID);\n  const history = useHistory();\n  const [favs, setFavs] = useState([]);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    axios.get(`https://www.omdbapi.com/?apikey=20dac387&t=${param}\"`).then(response => response.data).then(data => data).then(data => dispatch(setMovies(data)));\n  }, [param, dispatch]);\n  useEffect(() => {\n    axios.get(`/api/favorites:${movie.imdbID}`).then(data => console.log(data));\n    /* \n      .then((response) => response.data)\n      .then((data) => data)\n      .then((data) => dispatch(setFavs(data))); */\n  }, [favs]);\n\n  const handelFavs = () => {\n    axios.post(\"/api/favorites\", {\n      title: movie.Title,\n      year: movie.Year,\n      poster: movie.Poster\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ol\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => history.push(\"/movies\"),\n          children: \"TO BACK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handelFavs,\n          children: \"Agregar a Favoritos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"favs\",\n      children: /*#__PURE__*/_jsxDEV(Favorites, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: favs && favs.map(fav => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: fav\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: movie.Title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gridItem\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.Poster,\n          alt: movie.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), movie.Plot]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Year and Genre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: movie.Year\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: movie.Genre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Language\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), movie.Language, /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Runtime\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), movie.Runtime, /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Actors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), movie.Actors, /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Ratings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), movie.Ratings && movie.Ratings.map(rating => {\n        return /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: rating.Source\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), rating.Value]\n        }, movie.imdbID + movie.Ratings.indexOf(rating), true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Movie, \"qe6cqmpf/9SxrHDJNEty/MDv66Q=\", false, function () {\n  return [useSelector, useHistory, useDispatch];\n});\n\n_c = Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["/home/buru/bootcamp/25-OMDB/src/components/Movie.jsx"],"names":["React","useEffect","useState","useHistory","useSelector","useDispatch","axios","setMovies","Favorites","setFavs","Movie","props","param","match","params","title","movie","state","movies","console","log","imdbID","history","favs","dispatch","get","then","response","data","handelFavs","post","Title","year","Year","poster","Poster","push","map","fav","Plot","Genre","Language","Runtime","Actors","Ratings","rating","Source","Value","indexOf"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { setMovies } from \"../store/movies\";\nimport { Favorites } from \"./Favorites\";\n\nimport { setFavs } from \"../store/favs\";\n\nexport const Movie = (props) => {\n  const param = props.match.params.title;\n  const movie = useSelector((state) => state.movies);\n  /* const favs = useSelector((state) => state.favorites);\n   */\n  console.log(movie.imdbID);\n\n  const history = useHistory();\n\n  const [favs, setFavs] = useState([]);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    axios\n      .get(`https://www.omdbapi.com/?apikey=20dac387&t=${param}\"`)\n\n      .then((response) => response.data)\n      .then((data) => data)\n      .then((data) => dispatch(setMovies(data)));\n  }, [param, dispatch]);\n\n  useEffect(() => {\n    axios\n      .get(`/api/favorites:${movie.imdbID}`)\n      .then((data) => console.log(data));\n\n    /* \n      .then((response) => response.data)\n      .then((data) => data)\n      .then((data) => dispatch(setFavs(data))); */\n  }, [favs]);\n\n  const handelFavs = () => {\n    axios.post(\"/api/favorites\", {\n      title: movie.Title,\n      year: movie.Year,\n      poster: movie.Poster,\n    });\n  };\n\n  return (\n    <>\n      <ul>\n        <ol>\n          <button onClick={() => history.push(\"/movies\")}>TO BACK</button>\n        </ol>\n        <ol>\n          <button onClick={handelFavs}>Agregar a Favoritos</button>\n        </ol>\n      </ul>\n\n      <div className=\"favs\">\n        <Favorites />\n      </div>\n\n      <ul>\n        {favs &&\n          favs.map((fav) => {\n            return <li>{fav}</li>;\n          })}\n      </ul>\n\n      <h2>{movie.Title}</h2>\n      <div className=\"gridItem\">\n        <div>\n          <img src={movie.Poster} alt={movie.Title} />\n        </div>\n\n        <div>\n          <h2>Description</h2>\n\n          {movie.Plot}\n        </div>\n        <h2>Year and Genre</h2>\n        <h4>{movie.Year}</h4>\n        <h4>{movie.Genre}</h4>\n        <h2>Language</h2>\n        {movie.Language}\n        <h2>Runtime</h2>\n        {movie.Runtime}\n        <h2>Actors</h2>\n        {movie.Actors}\n        <h2>Ratings</h2>\n        {movie.Ratings &&\n          movie.Ratings.map((rating) => {\n            return (\n              <section key={movie.imdbID + movie.Ratings.indexOf(rating)}>\n                <h3>{rating.Source}</h3>\n                {rating.Value}\n              </section>\n            );\n          })}\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}