{"ast":null,"code":"var _jsxFileName = \"/home/buru/bootcamp/25-OMDB/src/components/Movie.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { getOneByTitle } from \"../hooks/hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Movie = props => {\n  _s();\n\n  const param = props.match.params.title;\n  const [movie, setMovie] = useState({});\n  const [favs, setFavs] = useState([]);\n  useEffect(() => {\n    getOneByTitle(param).then(data => setMovie(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFavs([...favs, movie]),\n        children: \"Agregar a Favoritos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: movie.Title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: movie.Poster,\n      alt: movie.Title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), movie.Plot, /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Year and Genre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), movie.Year, movie.Genre, /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Language\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), movie.Language, /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Runtime\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), movie.Runtime, /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Actors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), movie.Actors, /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ratings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), movie.Ratings && movie.Ratings.map(rating => {\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: rating.Source\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this), rating.Value]\n      }, movie.imdbID + movie.Ratings.indexOf(rating), true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(Movie, \"Pn/ur1FPZloPF7S4atN0AGcG7S0=\");\n\n_c = Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["/home/buru/bootcamp/25-OMDB/src/components/Movie.jsx"],"names":["React","useState","useEffect","getOneByTitle","Movie","props","param","match","params","title","movie","setMovie","favs","setFavs","then","data","Title","Poster","Plot","Year","Genre","Language","Runtime","Actors","Ratings","map","rating","Source","Value","imdbID","indexOf"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,gBAA9B;;;AAEA,OAAO,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAMC,KAAK,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,KAAjC;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,aAAa,CAACG,KAAD,CAAb,CAAqBQ,IAArB,CAA2BC,IAAD,IAAUJ,QAAQ,CAACI,IAAD,CAA5C;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,4BACE;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAE,MAAMF,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUF,KAAV,CAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAA,gBAAKA,KAAK,CAACM;AAAX;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAK,MAAA,GAAG,EAAEN,KAAK,CAACO,MAAhB;AAAwB,MAAA,GAAG,EAAEP,KAAK,CAACM;AAAnC;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAA;AAAA;AAAA;AAAA,YATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF,EAWGN,KAAK,CAACQ,IAXT,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,EAaGR,KAAK,CAACS,IAbT,EAcGT,KAAK,CAACU,KAdT,eAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,EAgBGV,KAAK,CAACW,QAhBT,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjBF,EAkBGX,KAAK,CAACY,OAlBT,eAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF,EAoBGZ,KAAK,CAACa,MApBT,eAqBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF,EAsBGb,KAAK,CAACc,OAAN,IACCd,KAAK,CAACc,OAAN,CAAcC,GAAd,CAAmBC,MAAD,IAAY;AAC5B,0BACE;AAAA,gCACE;AAAA,oBAAKA,MAAM,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGD,MAAM,CAACE,KAFV;AAAA,SAAclB,KAAK,CAACmB,MAAN,GAAenB,KAAK,CAACc,OAAN,CAAcM,OAAd,CAAsBJ,MAAtB,CAA7B;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAPD,CAvBJ;AAAA,kBADF;AAkCD,CA3CM;;GAAMtB,K;;KAAAA,K","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getOneByTitle } from \"../hooks/hooks\";\n\nexport const Movie = (props) => {\n  const param = props.match.params.title;\n  const [movie, setMovie] = useState({});\n  const [favs, setFavs] = useState([]);\n\n  useEffect(() => {\n    getOneByTitle(param).then((data) => setMovie(data));\n  }, []);\n\n  return (\n    <>\n      <nav>\n        <button onClick={() => setFavs([...favs, movie])}>\n          Agregar a Favoritos\n        </button>\n      </nav>\n      <h1>{movie.Title}</h1>\n      <br />\n      <img src={movie.Poster} alt={movie.Title} />\n      <br />\n      <h2>Description</h2>\n      {movie.Plot}\n      <h2>Year and Genre</h2>\n      {movie.Year}\n      {movie.Genre}\n      <h2>Language</h2>\n      {movie.Language}\n      <h2>Runtime</h2>\n      {movie.Runtime}\n      <h2>Actors</h2>\n      {movie.Actors}\n      <h2>Ratings</h2>\n      {movie.Ratings &&\n        movie.Ratings.map((rating) => {\n          return (\n            <section key={movie.imdbID + movie.Ratings.indexOf(rating)}>\n              <h3>{rating.Source}</h3>\n              {rating.Value}\n            </section>\n          );\n        })}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}