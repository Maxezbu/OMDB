{"ast":null,"code":"import { createAction, createReducer } from \"@reduxjs/toolkit\";\nexport const setFavs = createAction(\"setFavs\");\nconst favsReducer = createReducer([], {\n  [setFavs]: (state, action) => [...state, action.payload]\n});\nexport default favsReducer; //////////////////////////////////\n\n\"localstorage\";\nexport const loadState = () => {\n  try {\n    const serializedData = localStorage.getItem(\"state\");\n\n    if (serializedData === null) {\n      return undefined; // Si no existe el state en el local storage devolvemos undefined para que cargue el state inicial que hayamos definido\n    }\n\n    return fromJS(JSON.parse(serializedData)); // Si encontramos con exito nuestro storage lo devolvemos.\n  } catch (error) {\n    return undefined; // Si ocurre algun error, devuelvo undefined para cargar el state inicial.\n  }\n};\nexport const saveState = state => {\n  try {\n    let serializedData = JSON.stringify(state.toJS());\n    localStorage.setItem(\"state\", serializedData);\n  } catch (error) {// Acá podemos capturar o crear cualquier log que deseemos en caso de que falle el salvado en el storage.\n  }\n};","map":{"version":3,"sources":["/home/buru/bootcamp/25-OMDB/src/store/favs.js"],"names":["createAction","createReducer","setFavs","favsReducer","state","action","payload","loadState","serializedData","localStorage","getItem","undefined","fromJS","JSON","parse","error","saveState","stringify","toJS","setItem"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,kBAA5C;AAEA,OAAO,MAAMC,OAAO,GAAGF,YAAY,CAAC,SAAD,CAA5B;AAEP,MAAMG,WAAW,GAAGF,aAAa,CAAC,EAAD,EAAK;AACpC,GAACC,OAAD,GAAW,CAACE,KAAD,EAAQC,MAAR,KAAmB,CAAC,GAAGD,KAAJ,EAAWC,MAAM,CAACC,OAAlB;AADM,CAAL,CAAjC;AAIA,eAAeH,WAAf,C,CAEA;;AAEC,cAAD;AAEA,OAAO,MAAMI,SAAS,GAAG,MAAM;AAC7B,MAAI;AACF,UAAMC,cAAc,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAvB;;AACA,QAAIF,cAAc,KAAK,IAAvB,EAA6B;AAC3B,aAAOG,SAAP,CAD2B,CACT;AACnB;;AACD,WAAOC,MAAM,CAACC,IAAI,CAACC,KAAL,CAAWN,cAAX,CAAD,CAAb,CALE,CAKyC;AAC5C,GAND,CAME,OAAOO,KAAP,EAAc;AACd,WAAOJ,SAAP,CADc,CACI;AACnB;AACF,CAVM;AAYP,OAAO,MAAMK,SAAS,GAAIZ,KAAD,IAAW;AAClC,MAAI;AACF,QAAII,cAAc,GAAGK,IAAI,CAACI,SAAL,CAAeb,KAAK,CAACc,IAAN,EAAf,CAArB;AACAT,IAAAA,YAAY,CAACU,OAAb,CAAqB,OAArB,EAA8BX,cAA9B;AACD,GAHD,CAGE,OAAOO,KAAP,EAAc,CACd;AACD;AACF,CAPM","sourcesContent":["import { createAction, createReducer } from \"@reduxjs/toolkit\";\n\nexport const setFavs = createAction(\"setFavs\");\n\nconst favsReducer = createReducer([], {\n  [setFavs]: (state, action) => [...state, action.payload],\n});\n\nexport default favsReducer;\n\n//////////////////////////////////\n\n(\"localstorage\");\n\nexport const loadState = () => {\n  try {\n    const serializedData = localStorage.getItem(\"state\");\n    if (serializedData === null) {\n      return undefined; // Si no existe el state en el local storage devolvemos undefined para que cargue el state inicial que hayamos definido\n    }\n    return fromJS(JSON.parse(serializedData)); // Si encontramos con exito nuestro storage lo devolvemos.\n  } catch (error) {\n    return undefined; // Si ocurre algun error, devuelvo undefined para cargar el state inicial.\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    let serializedData = JSON.stringify(state.toJS());\n    localStorage.setItem(\"state\", serializedData);\n  } catch (error) {\n    // Acá podemos capturar o crear cualquier log que deseemos en caso de que falle el salvado en el storage.\n  }\n};\n"]},"metadata":{},"sourceType":"module"}