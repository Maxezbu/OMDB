{"ast":null,"code":"var _jsxFileName = \"/home/buru/bootcamp/25-OMDB/src/components/SingleMovie.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { setMovie } from \"../store/singleMovie\";\nimport { Button, Typography, Box, Grid } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SingleMovie = props => {\n  _s();\n\n  const param = props.match.params.title;\n  const movie = useSelector(state => state.singleMovie);\n  const user = useSelector(state => state.user);\n  console.log(movie.imdbID);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    axios.get(`https://www.omdbapi.com/?apikey=20dac387&t=${param}\"`).then(response => response.data).then(data => data).then(data => dispatch(setMovie(data)));\n  }, []);\n\n  const handleFavs = () => {\n    axios.post(\"/api/favorites\", {\n      title: movie.Title,\n      year: movie.Year,\n      poster: movie.Poster,\n      favId: user.id\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ol\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          variant: \"contained\",\n          disableElevation: true,\n          onClick: handleFavs,\n          children: \"ADD TO FAVS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          variant: \"contained\",\n          disableElevation: true,\n          onClick: () => history.push(\"/favorites\"),\n          children: \"FAVORITES\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      border: 3,\n      borderColor: \"primary.main\",\n      borderRadius: 16,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        style: {\n          padding: 20\n        },\n        spacing: 2,\n        direction: \"row\",\n        justify: \"space-evenly\",\n        alignItems: \"flex-start\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          nowrap: true,\n          style: {\n            padding: 10\n          },\n          xs: true,\n          md: 4,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            color: \"textPrimary\",\n            children: movie.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: movie.Poster,\n              alt: movie.Title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          nowrap: true,\n          style: {\n            padding: 10\n          },\n          xs: true,\n          md: 4,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            color: \"textPrimary\",\n            align: \"center\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this), movie.Plot, /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Year and Genre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: movie.Year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: movie.Genre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Language\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), movie.Language, /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Runtime\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), movie.Runtime, /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Actors\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), movie.Actors, /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Ratings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), movie.Ratings && movie.Ratings.map(rating => {\n              return /*#__PURE__*/_jsxDEV(\"section\", {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: rating.Source\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 23\n                }, this), rating.Value]\n              }, movie.imdbID + movie.Ratings.indexOf(rating), true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 21\n              }, this);\n            })]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SingleMovie, \"qkZm09m9C0IjjwBiz6Jzn0nXrOo=\", false, function () {\n  return [useSelector, useSelector, useHistory, useDispatch];\n});\n\n_c = SingleMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleMovie\");","map":{"version":3,"sources":["/home/buru/bootcamp/25-OMDB/src/components/SingleMovie.jsx"],"names":["React","useEffect","useHistory","useSelector","useDispatch","axios","setMovie","Button","Typography","Box","Grid","SingleMovie","props","param","match","params","title","movie","state","singleMovie","user","console","log","imdbID","history","dispatch","get","then","response","data","handleFavs","post","Title","year","Year","poster","Poster","favId","id","push","padding","Plot","Genre","Language","Runtime","Actors","Ratings","map","rating","Source","Value","indexOf"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport axios from \"axios\";\n\nimport { setMovie } from \"../store/singleMovie\";\n\nimport { Button, Typography, Box, Grid } from \"@material-ui/core\";\n\nexport const SingleMovie = (props) => {\n  const param = props.match.params.title;\n  const movie = useSelector((state) => state.singleMovie);\n\n  const user = useSelector((state) => state.user);\n  console.log(movie.imdbID);\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    axios\n      .get(`https://www.omdbapi.com/?apikey=20dac387&t=${param}\"`)\n\n      .then((response) => response.data)\n      .then((data) => data)\n      .then((data) => dispatch(setMovie(data)));\n  }, []);\n\n  const handleFavs = () => {\n    axios.post(\"/api/favorites\", {\n      title: movie.Title,\n      year: movie.Year,\n      poster: movie.Poster,\n      favId: user.id,\n    });\n  };\n\n  return (\n    <>\n      <ul>\n        <ol>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            disableElevation\n            onClick={handleFavs}\n          >\n            ADD TO FAVS\n          </Button>\n        </ol>\n        <ol>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            disableElevation\n            onClick={() => history.push(\"/favorites\")}\n          >\n            FAVORITES\n          </Button>\n        </ol>\n      </ul>\n\n      <Box border={3} borderColor=\"primary.main\" borderRadius={16}>\n        <Grid\n          container\n          style={{ padding: 20 }}\n          spacing={2}\n          direction=\"row\"\n          justify=\"space-evenly\"\n          alignItems=\"flex-start\"\n        >\n          <Grid item nowrap style={{ padding: 10 }} xs md={4}>\n            <Typography variant=\"h4\" color=\"textPrimary\">\n              {movie.Title}\n            </Typography>\n            <Typography>\n              <img src={movie.Poster} alt={movie.Title} />\n            </Typography>\n          </Grid>\n          <Grid item nowrap style={{ padding: 10 }} xs md={4}>\n            <Typography variant=\"h4\" color=\"textPrimary\" align=\"center\">\n              Description\n            </Typography>\n            {movie.Plot}\n            <div>\n              <h3>Year and Genre</h3>\n              <h3>{movie.Year}</h3>\n              <h3>{movie.Genre}</h3>\n              <h3>Language</h3>\n              {movie.Language}\n              <h3>Runtime</h3>\n              {movie.Runtime}\n              <h3>Actors</h3>\n              {movie.Actors}\n              <h3>Ratings</h3>\n              {movie.Ratings &&\n                movie.Ratings.map((rating) => {\n                  return (\n                    <section key={movie.imdbID + movie.Ratings.indexOf(rating)}>\n                      <h3>{rating.Source}</h3>\n                      {rating.Value}\n                    </section>\n                  );\n                })}\n            </div>\n          </Grid>\n        </Grid>\n      </Box>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}