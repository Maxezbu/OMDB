{"ast":null,"code":"var _jsxFileName = \"/home/buru/bootcamp/25-OMDB/src/components/Movies.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getManyByTitleAndType } from \"../hooks/hooks\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Movies = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  const [buscador, setBuscador] = useState(\"\");\n  const [type, setType] = useState(\"movie\");\n  const [confirm, setConfirm] = useState(false);\n  useEffect(() => {\n    axios.get(\"/api/movies\").then(res => res.data).then(conf => {\n      setConfirm(conf);\n    }).catch(() => {});\n  }, [confirm]);\n  useEffect(() => {\n    getManyByTitleAndType(buscador, type).then(movies => setMovies(movies));\n  }, [buscador, type]);\n\n  const handleSearch = e => {\n    const value = e.target.value;\n    const input = e.target.name;\n\n    if (input === \"title\") {\n      return setBuscador(value);\n    } else if (input === \"type\") {\n      return setType(value);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  if (!confirm) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"HAS INGRESADO UN USUARIO NO V\\xC1LIDO\"\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"ingrese el t\\xEDtulo que busca\",\n        type: \"text\",\n        value: buscador,\n        onChange: handleSearch,\n        name: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: type,\n        onChange: handleSearch,\n        name: \"type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), movies && movies.map(movie => {\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `movie/${movie.Title}`,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: movie.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie && movie.Poster,\n            alt: movie.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: movie.Year\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 15\n        }, this)\n      }, movie.imdbID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(Movies, \"DgsJLEoroYaScJW8VAazhrLQ1AY=\");\n\n_c = Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/home/buru/bootcamp/25-OMDB/src/components/Movies.jsx"],"names":["React","useState","useEffect","Link","getManyByTitleAndType","Movies","movies","setMovies","buscador","setBuscador","type","setType","confirm","setConfirm","axios","get","then","res","data","conf","catch","handleSearch","e","value","target","input","name","handleSubmit","preventDefault","map","movie","Title","Poster","Year","imdbID"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getManyByTitleAndType } from \"../hooks/hooks\";\n\nexport const Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [buscador, setBuscador] = useState(\"\");\n  const [type, setType] = useState(\"movie\");\n  const [confirm, setConfirm] = useState(false);\n\n  useEffect(() => {\n    axios\n      .get(\"/api/movies\")\n      .then((res) => res.data)\n      .then((conf) => {\n        setConfirm(conf);\n      })\n      .catch(() => {});\n  }, [confirm]);\n\n  useEffect(() => {\n    getManyByTitleAndType(buscador, type).then((movies) => setMovies(movies));\n  }, [buscador, type]);\n\n  const handleSearch = (e) => {\n    const value = e.target.value;\n    const input = e.target.name;\n    if (input === \"title\") {\n      return setBuscador(value);\n    } else if (input === \"type\") {\n      return setType(value);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  if (!confirm) {\n    return <>HAS INGRESADO UN USUARIO NO VÁLIDO</>;\n  }\n  return (\n    <>\n      {/*   <Link to=\"/login\">\n        <button>INGRESAR</button>\n      </Link>\n\n      <Link to=\"/register\">\n        <button>REGRISTRARSE</button>\n      </Link> */}\n\n      <form onSubmit={handleSubmit}>\n        <h3>Title</h3>\n        <input\n          placeholder=\"ingrese el título que busca\"\n          type=\"text\"\n          value={buscador}\n          onChange={handleSearch}\n          name=\"title\"\n        />\n        <h3>Type</h3>\n        <input type=\"text\" value={type} onChange={handleSearch} name=\"type\" />\n      </form>\n      {movies &&\n        movies.map((movie) => {\n          return (\n            <section key={movie.imdbID}>\n              <Link to={`movie/${movie.Title}`}>\n                <h1>{movie.Title}</h1>\n                <img src={movie && movie.Poster} alt={movie.Title} />\n                <h3>{movie.Year}</h3>\n              </Link>\n            </section>\n          );\n        })}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}