{"ast":null,"code":"var _jsxFileName = \"/home/buru/bootcamp/25-OMDB/src/components/Movie.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { getOneByTitle } from \"../hooks/hooks\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { setMovie } from \"../store/movies\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Movie = props => {\n  _s();\n\n  const param = props.match.params.title;\n  const movie = useSelector(state => state.movie);\n  const dispatch = useDispatch();\n  /* const [movie, setMovie] = useState({}); */\n\n  const [favs, setFavs] = useState([]);\n  useEffect(() => {\n    axios.get(`https://www.omdbapi.com/?apikey=20dac387&t=${param}\"`).then(response => response.data).then(data => data).then(data => dispatch(setMovie(data)));\n  }, [param]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setFavs([...favs, movie]),\n        children: [console.log(favs), \"Agregar a Favoritos\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: movie.Title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: movie.Poster,\n      alt: movie.Title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), movie.Plot, /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Year and Genre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), movie.Year, movie.Genre, /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Language\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), movie.Language, /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Runtime\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), movie.Runtime, /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Actors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), movie.Actors, /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Ratings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), movie.Ratings && movie.Ratings.map(rating => {\n      return /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: rating.Source\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this), rating.Value]\n      }, movie.imdbID + movie.Ratings.indexOf(rating), true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this);\n    })]\n  }, void 0, true);\n};\n\n_s(Movie, \"4cfTrVAlS9zcJ07+CpakVT+YiVM=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["/home/buru/bootcamp/25-OMDB/src/components/Movie.jsx"],"names":["React","useState","useEffect","getOneByTitle","useSelector","useDispatch","axios","setMovie","Movie","props","param","match","params","title","movie","state","dispatch","favs","setFavs","get","then","response","data","console","log","Title","Poster","Plot","Year","Genre","Language","Runtime","Actors","Ratings","map","rating","Source","Value","imdbID","indexOf"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,aAAT,QAA8B,gBAA9B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,iBAAzB;;;AAEA,OAAO,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAMC,KAAK,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBC,KAAjC;AAEA,QAAMC,KAAK,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACD,KAAlB,CAAzB;AAEA,QAAME,QAAQ,GAAGX,WAAW,EAA5B;AAEA;;AACA,QAAM,CAACY,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,KAAK,CACFa,GADH,CACQ,8CAA6CT,KAAM,GAD3D,EAGGU,IAHH,CAGSC,QAAD,IAAcA,QAAQ,CAACC,IAH/B,EAIGF,IAJH,CAISE,IAAD,IAAUA,IAJlB,EAKGF,IALH,CAKSE,IAAD,IAAUN,QAAQ,CAACT,QAAQ,CAACe,IAAD,CAAT,CAL1B;AAMD,GAPQ,EAON,CAACZ,KAAD,CAPM,CAAT;AASA,sBACE;AAAA,4BACE;AAAA,6BACE;AAAQ,QAAA,OAAO,EAAE,MAAMQ,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAUH,KAAV,CAAD,CAA9B;AAAA,mBACGS,OAAO,CAACC,GAAR,CAAYP,IAAZ,CADH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAOE;AAAA,gBAAKH,KAAK,CAACW;AAAX;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAA;AAAA;AAAA;AAAA,YARF,eASE;AAAK,MAAA,GAAG,EAAEX,KAAK,CAACY,MAAhB;AAAwB,MAAA,GAAG,EAAEZ,KAAK,CAACW;AAAnC;AAAA;AAAA;AAAA;AAAA,YATF,eAUE;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,EAYGX,KAAK,CAACa,IAZT,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,EAcGb,KAAK,CAACc,IAdT,EAeGd,KAAK,CAACe,KAfT,eAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF,EAiBGf,KAAK,CAACgB,QAjBT,eAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBF,EAmBGhB,KAAK,CAACiB,OAnBT,eAoBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBF,EAqBGjB,KAAK,CAACkB,MArBT,eAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBF,EAuBGlB,KAAK,CAACmB,OAAN,IACCnB,KAAK,CAACmB,OAAN,CAAcC,GAAd,CAAmBC,MAAD,IAAY;AAC5B,0BACE;AAAA,gCACE;AAAA,oBAAKA,MAAM,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGD,MAAM,CAACE,KAFV;AAAA,SAAcvB,KAAK,CAACwB,MAAN,GAAexB,KAAK,CAACmB,OAAN,CAAcM,OAAd,CAAsBJ,MAAtB,CAA7B;AAAA;AAAA;AAAA;AAAA,cADF;AAMD,KAPD,CAxBJ;AAAA,kBADF;AAmCD,CAtDM;;GAAM3B,K;UAGGJ,W,EAEGC,W;;;KALNG,K","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getOneByTitle } from \"../hooks/hooks\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\n\nimport { setMovie } from \"../store/movies\";\n\nexport const Movie = (props) => {\n  const param = props.match.params.title;\n\n  const movie = useSelector((state) => state.movie);\n\n  const dispatch = useDispatch();\n\n  /* const [movie, setMovie] = useState({}); */\n  const [favs, setFavs] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(`https://www.omdbapi.com/?apikey=20dac387&t=${param}\"`)\n\n      .then((response) => response.data)\n      .then((data) => data)\n      .then((data) => dispatch(setMovie(data)));\n  }, [param]);\n\n  return (\n    <>\n      <nav>\n        <button onClick={() => setFavs([...favs, movie])}>\n          {console.log(favs)}\n          Agregar a Favoritos\n        </button>\n      </nav>\n      <h1>{movie.Title}</h1>\n      <br />\n      <img src={movie.Poster} alt={movie.Title} />\n      <br />\n      <h2>Description</h2>\n      {movie.Plot}\n      <h2>Year and Genre</h2>\n      {movie.Year}\n      {movie.Genre}\n      <h2>Language</h2>\n      {movie.Language}\n      <h2>Runtime</h2>\n      {movie.Runtime}\n      <h2>Actors</h2>\n      {movie.Actors}\n      <h2>Ratings</h2>\n      {movie.Ratings &&\n        movie.Ratings.map((rating) => {\n          return (\n            <section key={movie.imdbID + movie.Ratings.indexOf(rating)}>\n              <h3>{rating.Source}</h3>\n              {rating.Value}\n            </section>\n          );\n        })}\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}