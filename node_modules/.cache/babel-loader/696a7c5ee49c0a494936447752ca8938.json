{"ast":null,"code":"var _jsxFileName = \"/home/buru/bootcamp/25-OMDB/src/components/Movies.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { getManyByTitle } from \"../hooks/hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Movies = () => {\n  _s();\n\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    getManyByTitle(\"superman\").then(movies => setMovies(movies));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: movies && movies.map(movie => {\n        return movie;\n        /* return (\n          <li key={movie.imdbID}>\n            <h1>{movie.Title}</h1>\n            <img src={movie && movie.Poster} />\n            <h3>{movie.Year}</h3>\n          </li>\n        ); */\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Movies, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n\n_c = Movies;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movies\");","map":{"version":3,"sources":["/home/buru/bootcamp/25-OMDB/src/components/Movies.jsx"],"names":["React","useState","useEffect","getManyByTitle","Movies","movies","setMovies","then","map","movie"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,gBAA/B;;;AAEA,OAAO,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAC1B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBL,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,cAAc,CAAC,UAAD,CAAd,CAA2BI,IAA3B,CAAiCF,MAAD,IAAYC,SAAS,CAACD,MAAD,CAArD;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE;AAAA,2BACE;AAAA,gBACGA,MAAM,IACLA,MAAM,CAACG,GAAP,CAAYC,KAAD,IAAW;AACpB,eAAOA,KAAP;AACA;AACZ;AACA;AACA;AACA;AACA;AACA;AACW,OATD;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAiBD,CAxBM;;GAAML,M;;KAAAA,M","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getManyByTitle } from \"../hooks/hooks\";\n\nexport const Movies = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getManyByTitle(\"superman\").then((movies) => setMovies(movies));\n  }, []);\n\n  return (\n    <>\n      <ul>\n        {movies &&\n          movies.map((movie) => {\n            return movie;\n            /* return (\n              <li key={movie.imdbID}>\n                <h1>{movie.Title}</h1>\n                <img src={movie && movie.Poster} />\n                <h3>{movie.Year}</h3>\n              </li>\n            ); */\n          })}\n      </ul>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}