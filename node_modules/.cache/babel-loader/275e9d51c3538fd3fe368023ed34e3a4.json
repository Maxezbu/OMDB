{"ast":null,"code":"var _jsxFileName = \"/home/buru/bootcamp/25-OMDB/src/components/SingleMovie.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useHistory, useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { setMovies } from \"../store/movies\";\nimport { Movies } from \"../components/Movies\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SingleMovie = props => {\n  _s();\n\n  const param = props.match.params.title;\n  const movie = useSelector(state => state.movies);\n  const navigate = useNavigate();\n  const user = useSelector(state => state.user);\n  console.log(movie.imdbID);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    axios.get(`https://www.omdbapi.com/?apikey=20dac387&t=${param}\"`).then(response => response.data).then(data => data).then(data => dispatch(setMovies(data)));\n  }, []);\n\n  const handleFavs = () => {\n    axios.post(\"/api/favorites\", {\n      title: movie.Title,\n      year: movie.Year,\n      poster: movie.Poster,\n      favId: user.id\n    }); //.then((data) => dispatch(setFavs(data)));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ol\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(-1),\n          children: \"go back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleFavs,\n          children: \"ADD TO FAVS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => history.push(\"/favorites\"),\n          children: \"FAVORITES \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: movie.Title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gridItem\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: movie.Poster,\n          alt: movie.Title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), movie.Plot]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Year and Genre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: movie.Year\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: movie.Genre\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Language\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), movie.Language, /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Runtime\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), movie.Runtime, /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Actors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), movie.Actors, /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Ratings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), movie.Ratings && movie.Ratings.map(rating => {\n        return /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: rating.Source\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), rating.Value]\n        }, movie.imdbID + movie.Ratings.indexOf(rating), true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SingleMovie, \"2J1n0dFYnmGiW6V/VRcaOg7TdSI=\", false, function () {\n  return [useSelector, useNavigate, useSelector, useHistory, useDispatch];\n});\n\n_c = SingleMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleMovie\");","map":{"version":3,"sources":["/home/buru/bootcamp/25-OMDB/src/components/SingleMovie.jsx"],"names":["React","useEffect","useHistory","useNavigate","useSelector","useDispatch","axios","setMovies","Movies","SingleMovie","props","param","match","params","title","movie","state","movies","navigate","user","console","log","imdbID","history","dispatch","get","then","response","data","handleFavs","post","Title","year","Year","poster","Poster","favId","id","push","Plot","Genre","Language","Runtime","Actors","Ratings","map","rating","Source","Value","indexOf"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useHistory, useNavigate } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { setMovies } from \"../store/movies\";\nimport { Movies } from \"../components/Movies\";\n\nexport const SingleMovie = (props) => {\n  const param = props.match.params.title;\n  const movie = useSelector((state) => state.movies);\n\n  const navigate = useNavigate();\n\n  const user = useSelector((state) => state.user);\n  console.log(movie.imdbID);\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    axios\n      .get(`https://www.omdbapi.com/?apikey=20dac387&t=${param}\"`)\n\n      .then((response) => response.data)\n      .then((data) => data)\n      .then((data) => dispatch(setMovies(data)));\n  }, []);\n\n  const handleFavs = () => {\n    axios.post(\"/api/favorites\", {\n      title: movie.Title,\n      year: movie.Year,\n      poster: movie.Poster,\n      favId: user.id,\n    });\n    //.then((data) => dispatch(setFavs(data)));\n  };\n\n  return (\n    <>\n      <ul>\n        <ol>\n          <button onClick={() => navigate(-1)}>go back</button>\n          {/*  <button onClick={() => history.goBack()}>TO BACK</button> */}\n        </ol>\n        <ol>\n          <button onClick={handleFavs}>ADD TO FAVS</button>\n        </ol>\n        <ol>\n          <button onClick={() => history.push(\"/favorites\")}>FAVORITES </button>\n        </ol>\n      </ul>\n\n      <h2>{movie.Title}</h2>\n      <div className=\"gridItem\">\n        <div>\n          <img src={movie.Poster} alt={movie.Title} />\n        </div>\n\n        <div>\n          <h2>Description</h2>\n\n          {movie.Plot}\n        </div>\n        <h2>Year and Genre</h2>\n        <h4>{movie.Year}</h4>\n        <h4>{movie.Genre}</h4>\n        <h2>Language</h2>\n        {movie.Language}\n        <h2>Runtime</h2>\n        {movie.Runtime}\n        <h2>Actors</h2>\n        {movie.Actors}\n        <h2>Ratings</h2>\n        {movie.Ratings &&\n          movie.Ratings.map((rating) => {\n            return (\n              <section key={movie.imdbID + movie.Ratings.indexOf(rating)}>\n                <h3>{rating.Source}</h3>\n                {rating.Value}\n              </section>\n            );\n          })}\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}