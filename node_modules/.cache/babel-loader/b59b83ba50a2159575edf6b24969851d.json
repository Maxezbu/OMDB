{"ast":null,"code":"var _jsxFileName = \"/home/buru/bootcamp/25-OMDB/src/components/SingleMovie.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport axios from \"axios\";\nimport { setMovie } from \"../store/singleMovie\";\nimport { Button, Typography, Box, Grid } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SingleMovie = props => {\n  _s();\n\n  const param = props.match.params.title;\n  const movie = useSelector(state => state.singleMovie);\n  const user = useSelector(state => state.user);\n  console.log(movie.imdbID);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    axios.get(`https://www.omdbapi.com/?apikey=20dac387&t=${param}\"`).then(response => response.data).then(data => data).then(data => dispatch(setMovie(data)));\n  }, []);\n\n  const handleFavs = () => {\n    axios.post(\"/api/favorites\", {\n      title: movie.Title,\n      year: movie.Year,\n      poster: movie.Poster,\n      favId: user.id\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      style: {\n        padding: 10\n      },\n      spacing: 2,\n      direction: \"row\",\n      justify: \"space-evenly\",\n      alignItems: \"flex-start\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        variant: \"contained\",\n        disableElevation: true,\n        onClick: handleFavs,\n        size: \"medium\",\n        children: \"AGRAGAR A FAVORITOS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        variant: \"contained\",\n        disableElevation: true,\n        onClick: () => history.push(\"/favorites\"),\n        children: \"MIS FAVORITOS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      border: 3,\n      borderColor: \"primary.main\",\n      borderRadius: 16,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        style: {\n          padding: 20\n        },\n        spacing: 2,\n        direction: \"row\",\n        justify: \"space-evenly\",\n        alignItems: \"flex-start\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          nowrap: true,\n          style: {\n            padding: 10\n          },\n          xs: true,\n          md: 4,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            color: \"primary\",\n            children: movie.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: movie.Poster,\n            alt: movie.Title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          nowrap: true,\n          style: {\n            padding: 10\n          },\n          xs: true,\n          md: 4,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            color: \"primary\",\n            align: \"center\",\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), movie.Plot, /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Year and Genre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), movie.Year, movie.Genre, /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Language\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), movie.Language, /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Runtime\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), movie.Runtime, /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Actors\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), movie.Actors, /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Ratings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), movie.Ratings && movie.Ratings.map(rating => {\n            return /*#__PURE__*/_jsxDEV(\"section\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: rating.Source\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 21\n              }, this), rating.Value]\n            }, movie.imdbID + movie.Ratings.indexOf(rating), true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 19\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SingleMovie, \"qkZm09m9C0IjjwBiz6Jzn0nXrOo=\", false, function () {\n  return [useSelector, useSelector, useHistory, useDispatch];\n});\n\n_c = SingleMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleMovie\");","map":{"version":3,"sources":["/home/buru/bootcamp/25-OMDB/src/components/SingleMovie.jsx"],"names":["React","useEffect","useHistory","useSelector","useDispatch","axios","setMovie","Button","Typography","Box","Grid","SingleMovie","props","param","match","params","title","movie","state","singleMovie","user","console","log","imdbID","history","dispatch","get","then","response","data","handleFavs","post","Title","year","Year","poster","Poster","favId","id","padding","push","Plot","Genre","Language","Runtime","Actors","Ratings","map","rating","Source","Value","indexOf"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport axios from \"axios\";\n\nimport { setMovie } from \"../store/singleMovie\";\n\nimport { Button, Typography, Box, Grid } from \"@material-ui/core\";\n\nexport const SingleMovie = (props) => {\n  const param = props.match.params.title;\n  const movie = useSelector((state) => state.singleMovie);\n\n  const user = useSelector((state) => state.user);\n  console.log(movie.imdbID);\n  const history = useHistory();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    axios\n      .get(`https://www.omdbapi.com/?apikey=20dac387&t=${param}\"`)\n\n      .then((response) => response.data)\n      .then((data) => data)\n      .then((data) => dispatch(setMovie(data)));\n  }, []);\n\n  const handleFavs = () => {\n    axios.post(\"/api/favorites\", {\n      title: movie.Title,\n      year: movie.Year,\n      poster: movie.Poster,\n      favId: user.id,\n    });\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        style={{ padding: 10 }}\n        spacing={2}\n        direction=\"row\"\n        justify=\"space-evenly\"\n        alignItems=\"flex-start\"\n      >\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          disableElevation\n          onClick={handleFavs}\n          size=\"medium\"\n        >\n          AGRAGAR A FAVORITOS\n        </Button>\n\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          disableElevation\n          onClick={() => history.push(\"/favorites\")}\n        >\n          MIS FAVORITOS\n        </Button>\n      </Grid>\n\n      <Box border={3} borderColor=\"primary.main\" borderRadius={16}>\n        <Grid\n          container\n          style={{ padding: 20 }}\n          spacing={2}\n          direction=\"row\"\n          justify=\"space-evenly\"\n          alignItems=\"flex-start\"\n        >\n          <Grid item nowrap style={{ padding: 10 }} xs md={4}>\n            <Typography variant=\"h3\" color=\"primary\">\n              {movie.Title}\n            </Typography>\n            <img src={movie.Poster} alt={movie.Title} />\n          </Grid>\n          <Grid item nowrap style={{ padding: 10 }} xs md={4}>\n            <Typography variant=\"h3\" color=\"primary\" align=\"center\">\n              Description\n            </Typography>\n            {movie.Plot}\n            <h3>Year and Genre</h3>\n            {movie.Year}\n            {movie.Genre}\n            <h3>Language</h3>\n            {movie.Language}\n            <h3>Runtime</h3>\n            {movie.Runtime}\n            <h3>Actors</h3>\n            {movie.Actors}\n            <h3>Ratings</h3>\n            {movie.Ratings &&\n              movie.Ratings.map((rating) => {\n                return (\n                  <section key={movie.imdbID + movie.Ratings.indexOf(rating)}>\n                    <h3>{rating.Source}</h3>\n                    {rating.Value}\n                  </section>\n                );\n              })}\n          </Grid>\n        </Grid>\n      </Box>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}